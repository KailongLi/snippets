#运行用户  
user root;  
#启动进程  
worker_processes 2;  
#全局错误日志及PID文件  
error_log logs/error.log notice;  
pid logs/nginx.pid;  
#工作模式及每个进程连接数上限  
events {  
	use epoll;  
	worker_connections 1024;     #所以nginx支持的总连接数就等于worker_processes * worker_connections
}  
#设定http服务器,利用它的反向代理功能提供负载均衡支持  
http {  
	#设定mime类型  
	include mime.types;  #这个是说nginx支持哪些多媒体类型，可以到conf/mime.types查看支持哪些多媒体
	default_type application/octet-stream;   #默认的数据类型 
	#设定日志格式  

	log_format main '$remote_addr - $remote_user [$time_local] ' 
	'"$request" $status $bytes_sent ' 
	'"$http_referer" "$http_user_agent" ' 
	'"$gzip_ratio"';  

	log_format download '$remote_addr - $remote_user [$time_local] ' 
	'"$request" $status $bytes_sent ' 
	'"$http_referer" "$http_user_agent" ' 
	'"$http_range" "$sent_http_content_range"';  
	#设定请求缓冲  
	client_header_buffer_size 1k;  
	large_client_header_buffers 4 4k;  
	#开启gzip模块  
	gzip on;  
	gzip_min_length 1100;  
	gzip_buffers 4 8k;  
	gzip_types text/plain;  
	output_buffers 1 32k;  
	postpone_output 1460;  
	#设定access log  
	access_log logs/access.log main;  
	client_header_timeout 3m;  
	client_body_timeout 3m;  
	send_timeout 3m;  
	sendfile on;  
	tcp_nopush on;  
	tcp_nodelay on;  
	keepalive_timeout 65;  
	#设定负载均衡的服务器列表  

	upstream 10.0.3.229 {  
	        
		#weigth参数表示权值,权值越高被分配到的几率越大 
		server 10.0.3.229:8029 max_fails=3 fail_timeout=3s  srun_id=a;
		server 192.168.13.222:8020 max_fails=3 fail_timeout=3s  srun_id=b;
		jvm_route $cookie_JSESSIONID|sessionid reverse;
		  
	}  
	server { #这个是设置web服务的，监听8080端口
        listen        8012;
        server_name    10.0.3.229;
        index     index.html index.htm;
        root        /var/www/html;
        #error_page     500 502 503 504    /50x.html;
        #location = /50x.html {
        #    root     html;
        #}
        } 
	#设定虚拟主机  
	server {  
		listen 80;  
		server_name 10.0.3.229;  
		#charset gb2312;  
		#设定本虚拟主机的访问日志  
		access_log logs/three.web.access.log main;  
		#如果访问 /img/*, /js/*, /css/* 资源,则直接取本地文件,不通过squid  
		#如果这些文件较多,不推荐这种方式,因为通过squid的缓存效果更好  
		#location ~ ^/(img|js|css)/{  
		#	root /data3/Html;  
		#	expires 24h;
		#} 
			#对 "/" 启用负载均衡  
		location / {  
			proxy_pass http://10.0.3.229;  #以这种格式来使用后端的web服务器
			proxy_redirect off;  
			proxy_set_header Host $host;  
			proxy_set_header X-Real-IP $remote_addr;  
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  
			client_max_body_size 10m;  
			client_body_buffer_size 128k;  
			proxy_connect_timeout 90;  
			proxy_send_timeout 90;  
			proxy_read_timeout 90;  
			proxy_buffer_size 4k;  
			proxy_buffers 4 32k;  
			proxy_busy_buffers_size 64k;  
			proxy_temp_file_write_size 64k;
		}  
		#设定查看Nginx状态的地址 ，在安装时要加上--with-http_stub_status_module参数
		#location /NginxStatus {  
		#	stub_status on;  
		#	access_log on;  
		#	auth_basic "NginxStatus";  
		#	auth_basic_user_file conf/htpasswd;     #设置访问密码，htpasswd -bc filename username password
		#}
	}
} 
